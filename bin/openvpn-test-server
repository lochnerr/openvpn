#!/bin/sh

set -e

# Run a OpenVPN Server test instance.

wait_file() {

  # Wait for file.
  for try in $(seq -s ' ' 1 ${2:-120}) ; do
    sleep 1s
    if [ -e $1 ]; then
      echo "File $1 is available!"
      break
    fi
  done
}

BASENAME="$(hostname -f)"

mkdir -p /etc/shared/servers
touch /etc/shared/servers/${BASENAME}

ALGO="$1"
PORT="$2"
NET="$3"

# Delay before starting.
[ -n "$4" ] && sleep $4

echo "Running Tests for ${BASENAME}."

SSH_OPTS="-o IdentitiesOnly=true -o StrictHostKeyChecking=no -i /etc/testing/id_ed25519_testing"

# Get into the openvpn directory.
cd /etc/openvpn

# Create server key and certificate signing request.
easyrsa --batch init-pki
if [ "$ALGO" = "rsa" ]; then
  easyrsa --batch --dn-mode=cn_only --req-cn="'${BASENAME}'" --use-algo=rsa --keysize=4096    --digest=sha256 gen-req ${BASENAME} nopass
else
  easyrsa --batch --dn-mode=cn_only --req-cn="'${BASENAME}'" --use-algo=ec  --curve=secp521r1 --digest=sha256 gen-req ${BASENAME} nopass
fi 
mv pki/private/*.key server.key
mv pki/reqs/*.req .
rm -rf pki

# Wait for the certificate authority container(s) to be ready.
wait_file /etc/shared/ca-is-ready 30

# Send the signing request to the CA.
scp $SSH_OPTS ${BASENAME}.req root@ca:.
rm ${BASENAME}.req

# Sign the request and create the package.
ssh $SSH_OPTS root@ca <<-__EOD__
	openvpn-package --port ${PORT:-1194} --net ${NET:-10.8.0.0} --test ${BASENAME}
	__EOD__

# Inform the sut process that we are initialized.
touch /etc/shared/${BASENAME}.ready

# Wait for the client(s) so we can test for revoked certificates.
wait_file /etc/shared/clients-are-ready 

# Get the "package" from the ca.
scp $SSH_OPTS root@ca:${BASENAME}.tgz .

# Extract the results.
tar -xzf $BASENAME.tgz

# Remove the unneeded tar file.
rm $BASENAME.tgz

echo "Starting OpenVPN for ${BASENAME}."
openvpn --config openvpn.conf &

# Wait for shutdown signal.
wait_file /etc/shared/shutdown-signal 1200

