#!/bin/sh

set -e

# Run a OpenVPN Client test instance.

wait_file() {

  # Wait for file.
  for try in $(seq -s ' ' 1 ${2:-120}) ; do
    sleep 1s
    if [ -e $1 ]; then
      echo "File $1 is available!"
      break
    fi
  done
}

BASENAME="${3}-${4}"

mkdir -p /etc/shared/clients
echo "$5" >/etc/shared/clients/${BASENAME}

ALGO="$1"
PORT="$2"
SERVER="$3"
CLIENT="$4"
STATE="$5"
SHORT_NAME="$(echo $SERVER | cut -d '.' -f 1)"

# Delay before starting.
[ -n "$6" ] && sleep $6

echo "Running Tests for ${BASENAME}."

SSH_OPTS="-o IdentitiesOnly=true -o StrictHostKeyChecking=no -i /etc/testing/id_ed25519_testing"

# Create the openvpn directory.
mkdir -p /home/$CLIENT/.cert

# Get into the openvpn directory.
cd /home/$CLIENT/.cert

# Create server key and certificate signing request.
easyrsa --batch init-pki
if [ "$ALGO" = "rsa" ]; then
  easyrsa --batch --dn-mode=cn_only --req-cn="'${BASENAME}'" --use-algo=rsa --keysize=4096    --digest=sha256 gen-req ${BASENAME} nopass
else
  easyrsa --batch --dn-mode=cn_only --req-cn="'${BASENAME}'" --use-algo=ec  --curve=secp521r1 --digest=sha256 gen-req ${BASENAME} nopass
fi 
mv pki/private/*.key .
mv pki/reqs/*.req .
rm -rf pki

# Wait for the vpn server to be ready.
wait_file /etc/shared/${SERVER}.ready 600

# Send the signing request to the CA.
scp $SSH_OPTS ${BASENAME}.req root@ca:.
rm ${BASENAME}.req

# Sign the request and create the package.
ssh $SSH_OPTS root@ca <<-__EOD__
	openvpn-package --port ${PORT:-1194} --nopass --address $SHORT_NAME --test $SERVER $CLIENT
	__EOD__

# Get the "package" from the ca.
scp $SSH_OPTS root@ca:${BASENAME}.tgz .

# Extract the results.
tar -xzf $BASENAME.tgz

# Remove the unneeded tar file.
rm $BASENAME.tgz

if [ "$STATE" = "revoked" ]; then
  echo "Testing revoked certificate: ${BASENAME}."
  # Revoke the client key.
  ssh $SSH_OPTS root@ca <<-__EOD__
	easyrsa --batch revoke ${BASENAME}
	easyrsa gen-crl
	# Build a new package for the server.
	openvpn-package --port ${PORT:-1194} --net 10.77.123.0 --test ${SERVER}
	__EOD__
fi

# Inform the sut process that we are initialized.
touch /etc/shared/${BASENAME}.ready

# Wait for the sut process to notify this client to continue.
wait_file /etc/shared/${BASENAME}.continue 600

echo "Starting OpenVPN for ${BASENAME}."
openvpn --config $SERVER.ovpn &

# Wait to connect to the vpn server.
TRIES="30"
[ "$STATE" = "revoked" ] && TRIES="10"
rm -f /etc/shared/${BASENAME}.status
echo "Pinging server from client ${BASENAME}."
for try in  $(seq 1 $TRIES) ; do
  if ping -c 3 -W 1 10.77.123.1 >/dev/null 2>&1 ; then
    echo "Info: ${BASENAME} connected!"
    echo "active" >/etc/shared/${BASENAME}.status
    break
  fi
done
if [ ! -e /etc/shared/${BASENAME}.status ]; then
  echo "Info: ${BASENAME} did not connect!"
  echo "revoked" >/etc/shared/${BASENAME}.status
fi

